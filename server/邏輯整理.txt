1. 上傳檔案的時候先去資料庫查詢是否有相同檔名的檔案
2-1. 如果沒有相同的檔名或者檔案類型
    2-1-1. 將檔案資料存進資料庫(須有一個欄位folderName來存儲資料夾名稱&第一筆資料的_id)
    2-1-2. 在uploadImage底下建立一個新的資料夾(根據_id命名)
    2-1-3. 進入該資料夾，並git init建立git
    2-1-3. 本地存檔
    2-1-4. git add.
    2-1-5. commit
    2-1-6. 取得commit的hash值(git rev-parse [分支名稱])
    2-1-7. 將hash值更新至資料庫

2-2. 如果有相同的檔名&檔案類型
    2-2-1. 將檔案資料存進資料庫 (要存第一筆資料的_id)
    2-2-2. 到資料庫查詢相同檔名的folderName
    2-2-2. 切換至該資料夾
    2-2-3. 本地存檔
    2-2-4. git status 查看檔案是否有變動
    2-2-5. 有變動 commit
        2-2-5-1. 取得commit的hash值(git rev-parse [分支名稱])
        2-2-5-2.  將hash值更新至資料庫
    2-2-6. 沒有變動 (因為沒有變動，所以用相同的hash)
        2-2-6-1. 取得前一次提交的hash值(git rev-parse [分支名稱])
        2-2-6-1. 將hash值更新至資料庫

3. 查詢清單列表，只顯示最新的檔案
4. 刪除檔案
    4-1. 根據檔案_id刪除資料庫裡面的紀錄
    4-2. 查詢相同檔名&檔案類型的最後一筆資料的hash值
        4-2-1.如果有
            4-2-1-1. git reverse回上一個commit點位
        4-2-2.如果沒有(代表目前的是最後一筆)
            4-2-2-1. 刪除檔案
            4-2-2-2. 刪除資料夾

5.查詢檔案的各個版本
    5-1. 根據檔案_id查詢
    5-2. 依照上傳日期(新->舊)做排序
    5-3. 點擊下載檔案按鈕 呼叫api 代folderName資料夾名稱&hash值 
    5-4. 根據 folderNam資料夾名稱 進入該資料夾
    5-5. 根據 hash值 checkout [hash] 切換至該commit點位
    5-6. 下載檔案完畢
    5-7. 返回至最新的commit

--- 未來可以做的功能 ---
6. 拖曳檔案上傳的順序(這樣需要多一個欄位來儲存排序)
7. 登入功能(這樣要再多一層資料夾)
